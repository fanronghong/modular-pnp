#pragma once
#ifndef __SPHERES_H
#define __SPHERES_H

#include <iostream>
#include <fstream>
#include <dolfin.h>
#include <sys/time.h>
#include <string.h>
#include <dolfin.h>

static double xc[86] = { -0.472222222222,0.5,0.694444444444,-0.0277777777778,0.555555555556,0.388888888889,0.611111111111,0.0555555555556,0.638888888889,-0.0555555555556,0.0833333333333,
	-0.361111111111,0.666666666667,-0.111111111111,0.611111111111,0.583333333333,-0.305555555556,-0.666666666667,-0.25,-0.5,-0.388888888889,
	-0.0555555555556,0.0277777777778,0.472222222222,0.444444444444,-0.25,0.583333333333,-0.666666666667,-0.0277777777778,-0.194444444444,-0.388888888889,
	0.333333333333,0.222222222222,-0.222222222222,0.222222222222,0.0833333333333,0.194444444444,-0.555555555556,0.694444444444,-0.611111111111,-0.361111111111,
	-0.388888888889,-0.583333333333,0.583333333333,-0.0833333333333,0.611111111111,0.583333333333,-0.0833333333333,0.166666666667,0.638888888889,0.333333333333,
	0.0,-0.166666666667,-0.166666666667,-0.333333333333,-0.194444444444,-0.111111111111,-0.666666666667,0.472222222222,0.0277777777778,-0.611111111111,
	-0.416666666667,-0.583333333333,-0.611111111111,0.611111111111,-0.666666666667,-0.527777777778,-0.416666666667,0.416666666667,-0.0555555555556,0.25,
	-0.138888888889,0.527777777778,-0.638888888889,0.416666666667,0.5,-0.444444444444,0.472222222222,0.25,0.527777777778,-0.194444444444,
	-0.555555555556,-0.361111111111,-0.0833333333333,-0.444444444444,-0.305555555556};

static double yc[86] = { -0.444444444444,0.305555555556,-0.416666666667,-0.0833333333333,-0.555555555556,-0.0555555555556,0.555555555556,0.555555555556,0.416666666667,-0.444444444444,0.0,
	0.5,-0.666666666667,0.138888888889,-0.444444444444,-0.416666666667,-0.416666666667,0.166666666667,0.25,0.638888888889,0.611111111111,
	0.527777777778,-0.333333333333,-0.0833333333333,-0.638888888889,0.111111111111,0.666666666667,0.611111111111,-0.611111111111,0.111111111111,-0.25,
	-0.25,-0.416666666667,-0.638888888889,-0.416666666667,0.388888888889,-0.0555555555556,0.166666666667,0.0555555555556,-0.638888888889,-0.388888888889,
	-0.694444444444,0.611111111111,-0.527777777778,0.25,-0.416666666667,0.555555555556,0.111111111111,0.416666666667,-0.333333333333,0.472222222222,
	0.472222222222,0.0555555555556,0.25,0.555555555556,0.5,0.194444444444,0.611111111111,0.444444444444,0.444444444444,0.277777777778,
	0.138888888889,-0.638888888889,-0.472222222222,0.277777777778,-0.416666666667,0.555555555556,0.666666666667,-0.222222222222,-0.194444444444,0.0555555555556,
	-0.138888888889,-0.611111111111,0.333333333333,-0.444444444444,-0.361111111111,-0.305555555556,-0.611111111111,-0.0833333333333,-0.694444444444,0.0555555555556,
	0.0833333333333,0.277777777778,-0.0833333333333,-0.666666666667,-0.611111111111};

static double zc[86] = { 0.194444444444,-0.527777777778,-0.416666666667,0.666666666667,-0.527777777778,-0.555555555556,0.0277777777778,0.666666666667,0.388888888889,0.305555555556,-0.583333333333,
	-0.138888888889,0.25,-0.194444444444,0.583333333333,0.416666666667,0.555555555556,0.472222222222,-0.638888888889,0.361111111111,0.222222222222,
	0.388888888889,0.527777777778,-0.111111111111,-0.333333333333,-0.138888888889,-0.666666666667,-0.166666666667,0.0555555555556,0.277777777778,-0.0277777777778,
	-0.555555555556,-0.666666666667,-0.5,-0.5,0.444444444444,0.666666666667,-0.611111111111,0.361111111111,0.194444444444,-0.472222222222,
	-0.472222222222,-0.194444444444,0.0,0.0,0.388888888889,0.194444444444,0.222222222222,-0.611111111111,-0.638888888889,0.222222222222,
	0.0555555555556,0.166666666667,0.611111111111,0.166666666667,0.5,0.0555555555556,0.555555555556,0.166666666667,0.305555555556,0.138888888889,
	0.611111111111,-0.166666666667,0.277777777778,0.0277777777778,-0.611111111111,0.333333333333,-0.416666666667,-0.666666666667,-0.194444444444,-0.527777777778,
	-0.416666666667,-0.222222222222,0.611111111111,-0.0833333333333,-0.444444444444,0.5,-0.472222222222,-0.527777777778,0.25,-0.25,
	-0.5,-0.222222222222,0.444444444444,0.361111111111,0.666666666667};

static double rc[86] = { 0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,
	0.25,0.25,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,
	0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,
	0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,
	0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.194444444444,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,
	0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,
	0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,
	0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.166666666667,
	0.166666666667,0.166666666667,0.166666666667,0.166666666667,0.138888888889};

static int Numb_spheres=5;

class SpheresSubDomain : public dolfin::SubDomain
{
public:
    bool inside(const dolfin::Array<double>& x, bool on_boundary) const
    {
      bool flag=false;
      for (int i=0;i<Numb_spheres;i++){
          if (on_boundary && (std::pow(x[0]-xc[i],2) + std::pow(x[1]-yc[i],2) + std::pow(x[2]-zc[i],2) < std::pow(rc[i],2)+1E-5) )
                  flag=true;
                }
          return flag;
    }
};

#endif
