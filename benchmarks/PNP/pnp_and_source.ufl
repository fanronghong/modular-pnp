# Copyright (C) 2014 CCMA@PSU Maximilian Metti, Xiaozhe Hu
#
#   Define bilinear and linear forms for 
#   the linearized Poisson-Nernst-Planck equations for a MOSFET
#
# Compile this form with FFC: ffc -O -l dolfin mosfet.ufl.

##  Finite Element Space
CG = FiniteElement("Lagrange", tetrahedron, 1)
V  = MixedElement([CG,CG,CG])        # Solution Space

(Cat, An, Phi) = TrialFunction(V)
(cat, an, phi) = TestFunction(V)

##  Previous Iterates
CatCat = Coefficient(CG)
AnAn = Coefficient(CG)
EsEs = Coefficient(CG)

##  Coefficients
eps = Coefficient(CG)
Dp = Coefficient(CG)
qp = Constant(tetrahedron)
Dn = Coefficient(CG)
qn = Constant(tetrahedron)

## Analytic solution
cation = Coefficient(CG)
anion = Coefficient(CG)
potential = Coefficient(CG)

a   = ( Dp*exp(CatCat) * ( inner(grad(Cat),grad(cat)) + inner(grad(CatCat)+qp*grad(EsEs), grad(cat)) * Cat ) )*dx \
    + ( qp*Dp*exp(CatCat) * inner(grad(Phi), grad(cat)) )*dx \
    + ( Dn*exp(AnAn  ) * ( inner(grad(An ),grad(an )) + inner(grad(AnAn  )+qn*grad(EsEs), grad(an))  * An  ) )*dx \
    + ( qn*Dn*exp(AnAn  ) * inner(grad(Phi), grad(an )) )*dx \
    + ( eps * inner(grad(Phi), grad(phi)) )*dx \
    + ( -(qp*exp(CatCat)*Cat + qn*exp(AnAn)*An)*phi )*dx

L   = ( Dp*exp(cation)*inner(grad(cation+qp*potential), grad(cat)) )*dx \
    + ( Dn*exp(anion )*inner(grad(anion +qn*potential), grad(an )) )*dx \
    + ( eps * inner(grad(potential), grad(phi)) )*dx \
    + ( -(qp*exp(cation) + qn*exp(anion))*phi )*dx \
    - ( Dp*exp(CatCat)*inner(grad(CatCat+qp*EsEs), grad(cat)) )*dx \
    - ( Dn*exp(AnAn  )*inner(grad(AnAn  +qn*EsEs), grad(an )) )*dx \
    - ( eps * inner(grad(EsEs),grad(phi)) )*dx \
    - ( -(qp*exp(CatCat) + qn*exp(AnAn))*phi )*dx

M   = ( (div(Dp*exp(CatCat)*grad(CatCat+qp*EsEs)) - div(Dp*exp(cation)*grad(cation+qp*potential))) \
      * (div(Dp*exp(CatCat)*grad(CatCat+qp*EsEs)) - div(Dp*exp(cation)*grad(cation+qp*potential))) )*dx \
    + ( (div(Dn*exp(AnAn  )*grad(AnAn  +qn*EsEs)) - div(Dn*exp(anion )*grad(anion +qn*potential))) \
      * (div(Dn*exp(AnAn  )*grad(AnAn  +qn*EsEs)) - div(Dn*exp(anion )*grad(anion +qn*potential))) )*dx \
    + ( ( (div(eps*grad(EsEs))+(qp*exp(CatCat)+qn*exp(AnAn))) \
          - (div(eps*grad(potential))+(qp*exp(cation)+qn*exp(anion))) ) \
      * ( (div(eps*grad(EsEs))+(qp*exp(CatCat)+qn*exp(AnAn))) \
          - (div(eps*grad(potential))+(qp*exp(cation)+qn*exp(anion))) ) )*dx
